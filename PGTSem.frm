// ==>ModuleName.cs                                              HDO, 2006-08-28
// -------------
// Semantic evaluator for table-driven top-down parsing.
// Generated by Coco-2 (PGT).
//=====================================|========================================

using System;
using System.Text;

using Lex = ==>LexName;
using Syn = ==>SynName;

public class ==>ModuleName {


  public const String MODULENAME = "==>ModuleName";

  public static void ==>ModuleNameMethod(Utils.ModuleAction action, out String moduleName) {
  //-----------------------------------|----------------------------------------
    moduleName = MODULENAME;
    switch (action) {
      case Utils.ModuleAction.getModuleName:
        return;
      case Utils.ModuleAction.initModule:
        break;
      case Utils.ModuleAction.resetModule:
        break;
      case Utils.ModuleAction.cleanupModule:
        return;
    } // switch
  } // ==>ModuleNameMethod


  // *** start of global SYN and SEM declarations from ATG ***
  
==>GlobalDeclarations
  // *** end of global SYN and SEM declarations from ATG ***

  ==>SemanticMethods

  public delegate void PragmaMethod();
  public static PragmaMethod[] pragmaMethods = {
      ==>PragmaMethodsInit
    };


  public static void StartSem() {
  //-----------------------------------|----------------------------------------
    for (;;) {
      switch (Syn.Interpret()) {
        case 0:
          return;
        case 1:
          ==>GrammarRootName();
          break;
      } // switch
    } // for
  } // StartSem

    
} // ==>ModuleName

// End of ==>ModuleName.cs
//=====================================|========================================
